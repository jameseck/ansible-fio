---
- name: "Ensure required packages ({{ packages | join(',') }}) are installed"
  package:
    name: "{{ packages }}"
    state: present
  tags:
  - package

- name: Create directory for fio stuff
  file:
    path: "{{ fio_output_dir }}"
    state: directory
  tags:
  - gen

- name: Generate fio job templates
  template:
    src: job.fio.j2
    dest: "{{ fio_output_dir }}/job_{{ item.1 | regex_replace('^\\/', '') | regex_replace('/', '_') }}_{{ item.0.key }}.fio"
  loop: "{{ fio_jobs | dict2items | product([fio_devices]|flatten) | list }}"
  tags:
  - gen

- name: Create fio launch script
  template:
    src: launch_fio.sh.j2
    dest: "{{ fio_output_dir }}/{{ item | regex_replace('^\\/', '') | regex_replace('/', '_') }}-launch_fio.sh"
    mode: 0755
  loop: "{{ [fio_devices] | flatten }}"
  tags:
  - gen

- name: Launch fio
  command: "./{{ item | regex_replace('^\\/', '') | regex_replace('/', '_') }}-launch_fio.sh"
  args:
    chdir: "{{ fio_output_dir }}"
  changed_when: true
  loop: "{{ [fio_devices] | flatten }}"
  tags:
  - fio_launch

- name: Tar up fio results
  archive:
    path: "{{ fio_output_dir }}"
    dest: "{{ fio_output_dir }}/fio_results.tar.gz"
    exclude_path: "{{ fio_output_dir }}/fio_results.tar.gz"
  tags:
  - results

- name: Ensure fio_fetch_dir exists
  file:
    name: "{{ fio_fetch_dir }}"
    state: directory
    recurse: yes

- name: Fetch fio results
  fetch:
    src: "{{ fio_output_dir }}/fio_results.tar.gz"
    dest: "{{ fio_fetch_dir }}/{{ inventory_hostname }}-fio_results.tar.gz"
    flat: yes
    mode: pull
  tags:
  - results
